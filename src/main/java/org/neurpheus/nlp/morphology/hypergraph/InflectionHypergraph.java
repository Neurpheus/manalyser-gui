/*
 * InflectionHypergraph.java
 *
 * Created on 15 lipiec 2007, 10:27
 */

package org.neurpheus.nlp.morphology.hypergraph;
import hypergraph.graphApi.Graph;
import hypergraph.visualnet.ForceDirectedWeight;
import hypergraph.visualnet.GenericMDSLayout;
import hypergraph.visualnet.GraphLayout;
import hypergraph.visualnet.GraphPanel;
import hypergraph.visualnet.TreeLayout;
import org.neurpheus.collections.tree.Tree;
import org.neurpheus.nlp.morphology.*;
import org.neurpheus.nlp.morphology.inflection.InflectionPatternsMap;

/**
 *
 * @author  Jakub Strychowski
 */
public class InflectionHypergraph extends javax.swing.JFrame {

    private HypergraphPanel graphPanel;
    
    /** Creates new form InflectionHypergraph */
    public InflectionHypergraph(Tree tree, InflectionPatternsMap ipm) {
        initComponents();
        
        InflectionHypergraphBuilder builder = new InflectionHypergraphBuilder(tree, ipm);
        Graph graph = builder.getGraph();
        graphPanel = new HypergraphPanel(graph, builder);
        
        if (builder.getCenterNode() != null) {
            graphPanel.centerNode(builder.getCenterNode());
        }
        
        jPanel1.add(graphPanel);
        
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        jPanel1 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Inflection Tree as a Hypergraph");
        setBackground(new java.awt.Color(255, 255, 255));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel1.setLayout(new javax.swing.BoxLayout(jPanel1, javax.swing.BoxLayout.Y_AXIS));

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 533, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 415, Short.MAX_VALUE)
        );
        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new InflectionHypergraph(null).setVisible(true);
//            }
//        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
    
}
